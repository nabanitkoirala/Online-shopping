{"ast":null,"code":"var _jsxFileName = \"/home/nabanit/react/online.shopping/src/Context.js\";\nimport React, { Component } from 'react';\nimport { StoreProducts, detailProduct } from './data'; //what is context API please read\n\nconst ProductContext = React.createContext(); //context comes in two variables provider and consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      StoreProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...products, singleItem];\n      });\n      this.setState(() => {\n        return {\n          tempProducts\n        };\n      });\n    };\n\n    this.handleDetail = () => {\n      console.log('Hello from Cart');\n    };\n\n    this.addToCart = () => {\n      console.log('hello from add to cart');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/nabanit/react/online.shopping/src/Context.js"],"names":["React","Component","StoreProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","setProducts","tempProducts","forEach","item","singleItem","setState","handleDetail","console","log","addToCart","render","props","children","ProductConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAuBC,aAAvB,QAA4C,QAA5C,C,CACA;;AACA,MAAMC,cAAc,GAACJ,KAAK,CAACK,aAAN,EAArB,C,CACA;;AAIA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCM,KADoC,GAC9B;AACFC,MAAAA,QAAQ,EAAC,EADP;AAEFL,MAAAA,aAAa,EAACA;AAFZ,KAD8B;;AAAA,SAKpCM,WALoC,GAKxB,MAAI;AACZ,UAAIC,YAAY,GAAC,EAAjB;AACAR,MAAAA,aAAa,CAACS,OAAd,CAAsBC,IAAI,IAAG;AACzB,cAAMC,UAAU,GAAC,EAAC,GAAGD;AAAJ,SAAjB;AACAF,QAAAA,YAAY,GAAC,CAAC,GAAGF,QAAJ,EAAaK,UAAb,CAAb;AACH,OAHD;AAIA,WAAKC,QAAL,CAAc,MAAI;AACd,eAAM;AAACJ,UAAAA;AAAD,SAAN;AAEH,OAHD;AAIH,KAfmC;;AAAA,SAgBpCK,YAhBoC,GAgBvB,MAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KAlBmC;;AAAA,SAmBpCC,SAnBoC,GAmB1B,MAAI;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,KArBmC;AAAA;;AAsBpCE,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAKZ,KAAT;AAChCQ,QAAAA,YAAY,EAAC,KAAKA,YADc;AAEhCG,QAAAA,SAAS,EAAC,KAAKA;AAFiB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKE,KAAL,CAAWC,QAHhB,CADJ;AAOH;;AA9BmC;;AAiCxC,MAAMC,eAAe,GAAClB,cAAc,CAACmB,QAArC;AAEA,SAASjB,eAAT,EAA0BgB,eAA1B","sourcesContent":["import React, { Component } from 'react';\nimport { StoreProducts,detailProduct } from './data';\n//what is context API please read\nconst ProductContext=React.createContext();\n//context comes in two variables provider and consumer\n\n\n\nclass ProductProvider extends Component {\n    state={\n        products:[],\n        detailProduct:detailProduct\n    };\n    setProducts=()=>{\n        let tempProducts=[];\n        StoreProducts.forEach(item =>{\n            const singleItem={...item};\n            tempProducts=[...products,singleItem];\n        })\n        this.setState(()=>{\n            return{tempProducts}\n\n        })\n    }\n    handleDetail=()=>{\n        console.log('Hello from Cart');\n    }\n    addToCart=()=>{\n        console.log('hello from add to cart');\n    }\n    render() {\n        return (\n            <ProductContext.Provider value={{...this.state,\n            handleDetail:this.handleDetail,\n            addToCart:this.addToCart}}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer=ProductContext.Consumer; \n\nexport { ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}