{"ast":null,"code":"var _jsxFileName = \"/home/nabanit/react/online.shopping/src/components/purchase.Form.js\";\nimport React, { Component } from 'react';\nexport default class PurchaseForm extends Component {\n  constructor(_event) {\n    super(_event);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.checkValue();\n      });\n    };\n\n    this.checkValue = event => {\n      let Value = this.state;\n\n      if (this.state.name.length > 5 && this.state.address.length > 5 && this.state.phonenumber.length > 9) {\n        this.setState({\n          isSubmitting: true\n        });\n      } else {\n        this.setState({\n          isSubmitting: false\n        });\n      }\n    };\n\n    this.state = {\n      name: '',\n      address: '',\n      phonenumber: '',\n      isSubmitting: false,\n      invalidField: true\n    };\n  }\n\n  render() {\n    let btn = this.state.isSubmitting ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }\n    }, \"submit\") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }\n    }, \"Please fill the form to continue\");\n    let checkfeedbackName = this.state.name.length > 5 ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"valid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }\n    }, \"Correct\") : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }\n    }, \"Name must be greater than 5 digits\");\n    let checkfeedbackAddress = this.state.address.length > 5 ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"valid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }\n    }, \"Correct\") : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }\n    }, \"Address must be greater than 5 digits\");\n    let checkfeedbackPhonenumber = this.state.phonenumber.length > 9 ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"valid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }\n    }, \"Correct\") : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }\n    }, \"Phone Number must be greater than 10 digits\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"was-validated\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"fullname\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), checkfeedbackName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      placeholder: \"address\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), checkfeedbackAddress), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"phonenumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"phonenumber\",\n      placeholder: \"fullname\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), checkfeedbackPhonenumber), btn));\n  }\n\n}","map":{"version":3,"sources":["/home/nabanit/react/online.shopping/src/components/purchase.Form.js"],"names":["React","Component","PurchaseForm","constructor","event","handleSubmit","preventDefault","handleChange","name","value","target","setState","checkValue","Value","state","length","address","phonenumber","isSubmitting","invalidField","render","btn","checkfeedbackName","checkfeedbackAddress","checkfeedbackPhonenumber"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport default class PurchaseForm extends Component {\n    constructor(event){\n        super(event);\n        this.state={\n            name:'',\n            address:'',\n            phonenumber:'',\n            isSubmitting:false,\n            invalidField:true\n        }\n        \n    }\n    handleSubmit=(event)=>{\n        event.preventDefault();      \n    }\n    \n    \n\n    handleChange=(event)=>{\n        const {name,value}= event.target;\n        this.setState({\n            [name]:value  \n        },()=>{this.checkValue();})\n    }\n    checkValue=(event)=>{\n        let Value=this.state;\n        if (this.state.name.length>5 && this.state.address.length>5 && this.state.phonenumber.length>9){\n            this.setState({\n                isSubmitting:true\n            })\n        }\n        else{\n            this.setState({\n                isSubmitting:false\n            })\n        }\n    }\n\n    \n\n    \n\n\n    render() {\n        let btn=this.state.isSubmitting \n                ?<button type=\"submit\">submit</button>\n                :<button type=\"submit\" disabled>Please fill the form to continue</button>\n        let checkfeedbackName=this.state.name.length>5\n                ?<p className=\"valid-feedback\">Correct</p>\n                :<p className=\"invalid-feedback\">Name must be greater than 5 digits</p>    \n        let checkfeedbackAddress=this.state.address.length>5\n                ?<p className=\"valid-feedback\">Correct</p>\n                :<p className=\"invalid-feedback\">Address must be greater than 5 digits</p>\n        let checkfeedbackPhonenumber=this.state.phonenumber.length>9\n                ?<p className=\"valid-feedback\">Correct</p>\n                :<p className=\"invalid-feedback\">Phone Number must be greater than 10 digits</p>      \n        return (\n            <div>\n                <form className=\"was-validated\" onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" name=\"name\" placeholder=\"fullname\" onChange={this.handleChange} required/>\n                    {checkfeedbackName}\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor=\"address\">Address</label>\n                    <input type=\"text\" name=\"address\" placeholder=\"address\" onChange={this.handleChange}/>\n                    {checkfeedbackAddress}\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor=\"phonenumber\">Phone Number</label>\n                    <input type=\"number\" name=\"phonenumber\" placeholder=\"fullname\" onChange={this.handleChange}/>\n                    {checkfeedbackPhonenumber}                    \n                    </div>\n                    {btn}\n                </form>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}