{"ast":null,"code":"var _jsxFileName = \"/home/nabanit/react/online.shopping/src/Context.js\";\nimport React, { Component } from 'react';\nimport { StoreProducts, detailProduct } from './data'; //what is context API please read\n\nconst ProductContext = React.createContext(); //context comes in two variables provider and consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      StoreProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      console.log(`hello from add to cart.id is ${id}`);\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/nabanit/react/online.shopping/src/Context.js"],"names":["React","Component","StoreProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","console","log","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAuBC,aAAvB,QAA4C,QAA5C,C,CACA;;AACA,MAAMC,cAAc,GAACJ,KAAK,CAACK,aAAN,EAArB,C,CACA;;AAIA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCM,KADoC,GAC9B;AACFC,MAAAA,QAAQ,EAAC,EADP;AAEFL,MAAAA,aAAa,EAACA;AAFZ,KAD8B;;AAAA,SAQpCM,WARoC,GAQxB,MAAI;AACZ,UAAIC,YAAY,GAAC,EAAjB;AACAR,MAAAA,aAAa,CAACS,OAAd,CAAsBC,IAAI,IAAG;AACzB,cAAMC,UAAU,GAAC,EAAC,GAAGD;AAAJ,SAAjB;AACAF,QAAAA,YAAY,GAAC,CAAC,GAAGA,YAAJ,EAAkBG,UAAlB,CAAb;AACH,OAHD;AAIA,WAAKC,QAAL,CAAc,MAAI;AACd,eAAM;AAACN,UAAAA,QAAQ,EAACE;AAAV,SAAN;AACH,OAFD;AAGH,KAjBmC;;AAAA,SAkBpCK,OAlBoC,GAkB5BC,EAAE,IAAE;AACR,YAAMC,OAAO,GAAC,KAAKV,KAAL,CAAWC,QAAX,CAAoBU,IAApB,CAAyBN,IAAI,IAAEA,IAAI,CAACI,EAAL,KAAYA,EAA3C,CAAd;AACA,aAAOC,OAAP;AACH,KArBmC;;AAAA,SAsBpCE,YAtBoC,GAsBtBH,EAAD,IAAM;AACf,YAAMC,OAAO,GAAE,KAAKF,OAAL,CAAaC,EAAb,CAAf;AACA,WAAKF,QAAL,CAAc,MAAI;AACd,eAAM;AAACX,UAAAA,aAAa,EAACc;AAAf,SAAN;AACH,OAFD;AAGH,KA3BmC;;AAAA,SA4BpCG,SA5BoC,GA4BzBJ,EAAD,IAAM;AACZK,MAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BN,EAAG,EAA/C;AACH,KA9BmC;AAAA;;AAKpCO,EAAAA,iBAAiB,GAAE;AACf,SAAKd,WAAL;AACH;;AAwBDe,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAKjB,KAAT;AAChCY,QAAAA,YAAY,EAAC,KAAKA,YADc;AAEhCC,QAAAA,SAAS,EAAC,KAAKA;AAFiB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKK,KAAL,CAAWC,QAHhB,CADJ;AAOH;;AAvCmC;;AA0CxC,MAAMC,eAAe,GAACvB,cAAc,CAACwB,QAArC;AAEA,SAAStB,eAAT,EAA0BqB,eAA1B","sourcesContent":["import React, { Component } from 'react';\nimport { StoreProducts,detailProduct } from './data';\n//what is context API please read\nconst ProductContext=React.createContext();\n//context comes in two variables provider and consumer\n\n\n\nclass ProductProvider extends Component {\n    state={\n        products:[],\n        detailProduct:detailProduct\n    };\n    componentDidMount(){\n        this.setProducts();\n    }\n    setProducts=()=>{\n        let tempProducts=[];\n        StoreProducts.forEach(item =>{\n            const singleItem={...item};\n            tempProducts=[...tempProducts, singleItem];\n        });\n        this.setState(()=>{\n            return{products:tempProducts};\n        });\n    };\n    getItem=id=>{\n        const product=this.state.products.find(item=>item.id === id);\n        return product;\n    };\n    handleDetail=(id)=>{\n        const product =this.getItem(id);\n        this.setState(()=>{\n            return{detailProduct:product};\n        });\n    };\n    addToCart=(id)=>{\n        console.log(`hello from add to cart.id is ${id}`);  \n    }\n    render() {\n        return (\n            <ProductContext.Provider value={{...this.state,\n            handleDetail:this.handleDetail,\n            addToCart:this.addToCart}}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer=ProductContext.Consumer; \n\nexport { ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}