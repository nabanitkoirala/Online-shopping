{"ast":null,"code":"var _jsxFileName = \"/home/nabanit/react/online.shopping/src/Context.js\";\nimport React, { Component } from 'react';\nimport { StoreProducts, detailProduct } from './data'; //what is context API please read\n\nconst ProductContext = React.createContext(); //context comes in two variables provider and consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      StoreProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      console.log(\"this is increment method\");\n    };\n\n    this.decrement = id => {\n      console.log(\"this is decrement method\");\n    };\n\n    this.removeItem = id => {\n      console.log(\"Item removed\");\n    };\n\n    this.clearCart = () => {\n      console.log(\"clearing cart\");\n    };\n\n    this.addTotal = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.13;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/nabanit/react/online.shopping/src/Context.js"],"names":["React","Component","StoreProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","console","log","openModal","closeModal","increment","decrement","removeItem","clearCart","addTotal","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StoreProducts,detailProduct } from './data';\n//what is context API please read\nconst ProductContext=React.createContext();\n//context comes in two variables provider and consumer\n\n\n\nclass ProductProvider extends Component {\n    state={\n        products:[],\n        detailProduct:detailProduct,\n        cart:[],\n        modalOpen:false ,\n        modalProduct:detailProduct,\n        cartSubTotal:0,\n        cartTax:0,\n        cartTotal:0\n    };\n    componentDidMount(){\n        this.setProducts();\n    }\n    setProducts=()=>{\n        let tempProducts=[];\n        StoreProducts.forEach(item =>{\n            const singleItem={...item};\n            tempProducts=[...tempProducts, singleItem];\n        });\n        this.setState(()=>{\n            return{products:tempProducts};\n        });\n    };\n    getItem=id=>{\n        const product=this.state.products.find(item=>item.id === id);\n        return product;\n    };\n    handleDetail=(id)=>{\n        const product =this.getItem(id);\n        this.setState(()=>{\n            return{detailProduct:product};\n        });\n    };\n    addToCart=(id)=>{\n        let tempProducts=[...this.state.products];\n        const index =tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total=price;\n        this.setState(()=>{\n            return{ products:tempProducts,cart:[...this.state.cart,product] };\n        },()=>{\n            console.log(this.state);\n        });  \n    };\n    openModal=id=>{\n        const product = this.getItem(id);\n        this.setState(()=>{\n            return{ modalProduct:product,modalOpen: true};\n        });\n    }\n    closeModal=()=>{\n        this.setState(()=>{\n            return{ modalOpen:false };\n        });\n\n    };\n    increment=(id)=>{\n        console.log(\"this is increment method\");\n    }\n\n    decrement=(id)=>{\n        console.log(\"this is decrement method\");\n    }\n    removeItem=(id)=>{\n        console.log(\"Item removed\");\n    }\n    clearCart=()=>{\n        console.log(\"clearing cart\");\n    }\n    addTotal=()=>{\n        let subTotal=0;\n        this.state.cart.map(item=>(subTotal+=item.total));\n        const tempTax=subTotal*0.13;\n        const tax=parseFloat(tempTax.toFixed(2));\n        const total=subTotal+tax;\n        this.setState(()=>{\n            return{\n                cartSubTotal:subTotal,\n                cartTax:tax,\n                cartTotal:total\n            }\n        })\n    }\n    render() {\n        return ( \n            <ProductContext.Provider value={{...this.state,\n            handleDetail:this.handleDetail,\n            addToCart:this.addToCart,\n            openModal:this.openModal,\n            closeModal:this.closeModal,\n            increment:this.increment,\n            decrement:this.decrement,\n            removeItem:this.removeItem,\n            clearCart:this.clearCart\n \n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer=ProductContext.Consumer; \n\nexport { ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}